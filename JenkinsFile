pipeline {
	agent any
  	stages {
		
		
        	stage('Clone repository') {
            		steps {	  
            			checkout scm 
            		}
		}
		stage('get_commit_details') {
        		steps {
            			script {
                			env.GIT_COMMIT_MSG = sh (script: 'git log -1 --pretty=%B ${GIT_COMMIT}', returnStdout: true).trim()
               				env.GIT_AUTHOR = sh (script: 'git log -1 --pretty=%cn ${GIT_COMMIT}', returnStdout: true).trim()
            			}
        		}
    		}
	}
	
	post{
		failure {
      			emailext(
          		subject: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
          		body: """<p>FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p><p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>, 
			<p>Committed by: ${env.GIT_AUTHOR};</p>
			<p>Commit Message: ${env.GIT_COMMIT_MSG};</p>""",
            		
			to: '$DEFAULT_RECIPIENTS',
          		recipientProviders: [[$class: 'DevelopersRecipientProvider']]
        	)
    		}
		success {
			emailext (
			subject: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
			body: """<p>SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p><p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>, 
			<p>Committed by: ${env.GIT_AUTHOR};</p>
			<p>Commit Message: ${env.GIT_COMMIT_MSG};</p>""",
			
            		to: '$DEFAULT_RECIPIENTS',
			recipientProviders: [[$class: 'DevelopersRecipientProvider']]
      	  	)
    		}
		unstable{
			emailext (
			subject:  "UNSTABLE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
        		body: """<p>UNSTABLE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
			<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>
			<p>Committed by: ${env.GIT_AUTHOR};</p>
                        <p>Commit Message: ${env.GIT_COMMIT_MSG};</p>""",
			to: '$DEFAULT_RECIPIENTS'
      	  		)
		}
	}
}
